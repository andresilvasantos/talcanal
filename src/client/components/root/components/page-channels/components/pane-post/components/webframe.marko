class {
    onCreate(input) {
        this.state = {
            loaded: false,
            url: input.url || ''
        }
    }

    onMount() {
        if(this.state.url.includes('twitter.com')) {
            this.intervalCheckScript = setInterval(() => {
                if(window.twttr) {
                    clearInterval(this.intervalCheckScript)

                    window.twttr.ready((twttr) => {
                        // Widgets.js file loaded.
                        twttr.events.bind('loaded', (event) => {
                            // Tweet has been loaded.
                            this.state.loaded = true
                        })
                    })
                }
            }, 200)
        }
    }

    onDestroy() {
        clearInterval(this.intervalCheckScript)
    }

    // Functions.

    loaded() {
        this.state.loaded = true
    }
}

$ const url = state.url || ''

<div.webframe class=[
    input.class,
    state.loaded ? 'loaded' : '',
    url.includes('soundcloud.com') ? 'soundcloud' : '',
    url.includes('twitter.com') ? 'twitter' : ''
]>
    <if(!state.loaded)>
        <div.wrapper-iconloading>
            <icon.icon-loading name='loading' />
        </div>
    </if>

    <if(url.includes('twitter.com'))>
        <blockquote.twitter-tweet>
            <a href=url />
        </blockquote>

        <script
            async
            charset='utf-8'
            src='https://platform.twitter.com/widgets.js'
        />
    </if>
    <else>
        <iframe
            key='iframe'
            allowfullscreen
            allowtransparency='false'
            loading='lazy'
            src=url
            on-load('loaded')
        />
    </else>
</div>

style.less {
    .webframe {
        --iconloading-size: 40px;

        background-color: var(--color-background3);
        border: 1px solid var(--color-border1);
        border-radius: var(--app-borderradius);
        overflow: hidden;
        position: relative;
        .transition(border-color 0.2s ease-out);

        >.wrapper-iconloading {
            .absolute-center();
            .transition(opacity 0.6s ease-out);

            >.icon-loading {
                color: var(--color-icon1);
                display: flex;
                .size(var(--iconloading-size));
                .svg-loading();
            }
        }

        &.soundcloud {
            --imagelink-height: 170px;
        }

        &.twitter {
            --imagelink-height: 250px;

            background-color: transparent;
            border: none;
            height: unset;
            min-height: var(--imagelink-height);
        }

        >.twitter-tweet {
            margin: 0 auto !important;
            position: relative;
        }

        >iframe {
            border: none;
            opacity: 0;
            position: relative;
            .size(100%);
            .transition(opacity 0.6s ease-out);
        }

        &.loaded {
            >.wrapper-iconloading {
                opacity: 0;
            }

            >iframe {
                opacity: 1;
            }
        }

        &:hover {
            border-color: var(--color-border2);
        }
    }
};