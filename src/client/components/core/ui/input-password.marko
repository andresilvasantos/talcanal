class {
    onMount() {
        this.root = this.getComponent('root')
    }

    // Getters & Setters

    getValue() {
        return this.root.getValue()
    }

    setValid(valid, error) {
        this.root.setValid(valid, error)
    }

    setValue(value) {
        this.root.setValue(value)
    }
}

<input-text.input-password
    key='root'
    class=[input.class, input.charsVisible ? '' : 'hidden-chars']
    icon='lock'
    maxlength=128
    noExternalUpdate
    placeholder=input.placeholder
    type=(input.charsVisible ? 'text' : 'password')
    on-keyup('emit', 'keyPressed')
>
    <button-icon.button-togglepassword.icon-only
        icon=(input.charsVisible ? 'eye' : 'eyeClosed')
        on-click('emit', 'toggleVisibility')
    />
</input-text>

style.less {
    .input-password {
        >.wrapper {
            >.button-togglepassword {
                --icon-size: 23px;

                flex-shrink: 0;
                margin-left: 20px;
                padding: 0;
            }
        }

        &.hidden-chars.has-text {
            --fontsize: 14px;

            >.wrapper {
                >input {
                    letter-spacing: 1px;
                }
            }
        }

        // Media queries.

        .r-max(@break-sm, {
            >.wrapper {
                >.button-togglepassword {
                    --icon-size: 18px;
                }
            }
        });
    }
}