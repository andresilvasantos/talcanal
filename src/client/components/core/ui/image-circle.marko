import appm from 'js/app-manager'

$ const image = input.image
$ const isBig = input.class && input.class.includes('big')

<div.image-circle class=input.class>
    <if(image)>
        <image.cover
            class=input.class
            lazyload
            noPlaceholder
            src=(isBig ? `${appm.getUrlCdn()}/${image}.jpg` : `${appm.getUrlCdn()}/${image}-tn.jpg`)
            srcSmall=(isBig ? `${appm.getUrlCdn()}/${image}-tn.jpg` : '')
        />
    </if>
    <else>
        <!-- wrapper-icon needed due to scaling problems when hovered -->
        <div.wrapper-icon>
            <icon name=(input.icon || 'image') rotation=input.iconRotation />
        </div>
    </else>
</div>

style.less {
    .image-circle {
        --icon-size: 18px;
        --size: 45px;

        background-color: var(--color-background3);
        border: 1px solid var(--color-border1);
        border-radius: 50%;
        flex-shrink: 0;
        overflow: hidden;
        position: relative;
        .flex-center();
        .size(var(--size));

        >.image {
            .absolute-fill();
        }

        >.wrapper-icon {
            .size(var(--icon-size));

            >.icon {
                color: var(--color-icon1);
                display: flex;
                .size(100%);
            }
        }

        &.tiny {
            --icon-size: 12px;
            --size: 20px;
        }

        &.small {
            --icon-size: 13px;
            --size: 25px;
        }

        &.medium {
            --icon-size: 15px;
            --size: 30px;
        }

        &.big {
            --icon-size: 26px;
            --size: 90px;
        }

        &.special {
            background-color: var(--color-accent1);

            >.wrapper-icon {
                >.icon {
                    color: @color-black;
                }
            }
        }

        &.special2 {
            background-color: var(--color-voteup);

            >.wrapper-icon {
                >.icon {
                    color: @color-black;
                }
            }
        }

        &.danger {
            background-color: var(--color-warning);

            >.wrapper-icon {
                >.icon {
                    color: @color-black;
                }
            }
        }

        // Media queries.

        .r-max(@break-md, {
            --icon-size: 16px;
            --size: 40px;

            &.medium {
                --icon-size: 14px;
                --size: 26px;
            }

            &.big {
                --icon-size: 22px;
                --size: 80px;
            }
        });

        .r-max(@break-sm, {
            &.small {
                --icon-size: 12px;
                --size: 22px;
            }
        });

        .r-max(@break-xs, {
            --icon-size: 14px;
            --size: 32px;

            &.medium {
                --icon-size: 12px;
                --size: 24px;
            }

            &.big {
                --icon-size: 18px;
                --size: 55px;
            }
        });
    }
};